
public class MainClass {

	public static void main(String[] args) {
		/*
			
			Object Oriented Programming
			객체		지향		
			
			구조, 관리는 객체지향
			흐름은 절차지향
			
			객체 지향 특징
			
			1. 은닉성(캡슐화):	멤버변수를 외부에서 접근하지 못하게함
			2. 상속성
			3. 다형성
			
			형식:
				class 클래스명 {
					variable
					
					method
					
				}
				=> 클래스의 설계도, 클래스의 선언부
										
			
		*/
		
		// class, array -> allocation(동적할당)	-> Heap 에 저장됨.
		MyClass cls = new MyClass();
	//	자료형	클래스의 변수 == 객체, object,
	//			instance(주체) = 실질적으로 메모리 위에 올라가는 주체(stack에 저장됨)
		cls.number = 1;
		cls.name = "홍길동";
		cls.method();
		
		// cls와 다른 것.
		MyClass cls1 = new MyClass();
		cls1.number = 2;
		cls1.name = "성춘향";
		cls1.method();
		
		// TV를 관리한다는 전제 하에 절자지향
		boolean isPowerOn;
		int channel;
		int volume;
		isPowerOn = true;
		channel = 23;
		volume = 10;
		
		System.out.println("Tv의 " + isPowerOn + "이고 채널:" + channel + "번을 보고 있으며 볼륨:" + volume + "입니다.");
		
	}

}

//선언만 해놓은 기본형태
class MyClass {
	// 멤버변수
	int number;
	String name;
	
	// 멤버메소드
	void method() {
		System.out.println("MyClass method()");
	}
}



