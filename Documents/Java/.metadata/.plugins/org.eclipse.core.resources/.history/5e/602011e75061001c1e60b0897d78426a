package dao;

import java.util.Arrays;
import java.util.Scanner;

import dto.StudentDto;
//데이터 접근, 관리(학생 기록부)
public class StudentDao {
	Scanner sc = new Scanner(System.in);
	
	
	private StudentDto Student[] = new StudentDto[20];
	private int count;
	
	
	
	public StudentDao() {
		count = 0;
	}
	
	// CRUD
	public void insert() {	// 학생 추가
		System.out.print("번호 = ");
		int number = sc.nextInt();
		
		System.out.print("이름 = ");
		String name = sc.next();
		
		System.out.print("신장 = ");
		double height= sc.nextDouble();
		
		System.out.print("영어 점수 = ");
		int eng = sc.nextInt();
		
		System.out.print("수학 점수 = ");
		int math = sc.nextInt();
		
		Student[count] = new StudentDto(number, name, height, eng, math);
		count++;
		//반복문을 안써도 되는 이유는 다시 insert() 를 시작했을때 카운트 수가 올라가서 다음 배열로 작성이 되기 때문이다.
	}
	
	public void delete() {	// 학생 삭제
		System.out.println("삭제할 학생 번호를 입력해주세요 = ");
		int number = sc.nextInt();
		
		Student[number-1] = new StudentDto(0, null, 0, 0, 0);
	}
	
	public void select() {	// 검색
		System.out.println("정보를 확인할 학생 번호를 입력해주세요 = ");
		int number = sc.nextInt();
		System.out.println(Student[number-1]);
	}
	
	public void update() {	// 수정
		
		System.out.println("수정할 학생 번호를 입력해주세요 = ");
		int number = sc.nextInt();
		
		System.out.println("해당 학생의 정보중 수정할 항목을 번호로 입력해주세요.");
		System.out.println("1. 번호");
		System.out.println("2. 이름");
		System.out.println("3. 신장");
		System.out.println("4. 영어 점수");
		System.out.println("5. 수학 점수");
		int number2 = sc.nextInt();
		switch(number2) {
			case 1:
				System.out.println("변경할 번호를 입력해주세요");
				int stNum = sc.nextInt();
				Student[number-1].setNumber(stNum);
				break;
			case 2:
				System.out.println("변경할 이름 입력해주세요");
				String stName = sc.next();
				Student[number-1].setName(stName);
				break;
			case 3:
				System.out.println("변경할 신장을 입력해주세요");
				double stHeight = sc.nextdouble();
				Student[number-1].setHeight(stHeight);
				break;
			case 4:
				System.out.println("변경할 영어점수를 입력해주세요");
				int eng = sc.nextint();
				Student[number-1].setHeight(eng);
				break;
		}
		
		Student[number-1].setNumber(number);
		
	}
	
	public void alldata() {	// 확인용
		
		for (int i = 0; i < Student.length; i++) {
			if (i == Student.length) {
				break;
			}
			this.Student[i].toString();
			System.out.println(Student[i]);
			
		}

	}
	
}
