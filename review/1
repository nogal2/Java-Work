package study;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;

public class self {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		Integer objNumber = 123;
		String str = objNumber.toString() + 1;
		System.out.println(str);
		// Integer클래스로 생성했던 것을 toString을 통해 문자열로 바꿈. 그래서 1231 이 출력됨.
		// 일반적으로는 사용을 잘 안함. 아래와 바꿀 수 있기 때문에.
		
		int num = 123;
		String str1 = num + "1";
		System.out.println(str1);
		
		
		double dnum = 123.456;
		String str2 = dnum + "1";
		System.out.println(str2);
		// 갑자기 궁금증이 생긴다. str1,2 안에 들어온 num과 dnum은 String 이겠지,,? 숫자int 문자열의 합이 아니라,,?
		// String 으로 선언한 str2로 되어 있는거 보면 맞는것 같긴한데, num을 "" 없이 단독으로 쓸때는 num이 인티저라서 안된다던데,,?
		// 그럼 int 가 단독으로 들어올때는 안되고 문자열이 섞이는 순간 인트도 문자열로 된다는 뜻이네. 왜냐하면 위 실험으로 봤을때는
		// String 자체가 인트로는 사용할 수 없으니까 자동변환이 되는듯.!
		// 일단 Integer 로 바꾸는게 확실한것 같으니,, 저걸로 사용하자.
		
		String str3 = "12345";
		int n = Integer.parseInt(str3);
		System.out.println(n);
		
		String str4 = "1234.5678";
		double d = Double.parseDouble(str4);
		System.out.println(d);
		
		int num10 = 16;
		String num2 = Integer.toBinaryString(num10);
		System.out.println(num2);
		
		String number2 = "10101100";
		int number10 = Integer.parseInt(number2, 2);
		System.out.println(number10);
		
		n = 20;
		String n8 = Integer.toOctalString(n);
		System.out.println(n8);
		
		n8 = "25";
		n = Integer.parseInt(n8, 8);
		System.out.println(n);
		
		n = 61;
		String h16 = Integer.toHexString(n);
		System.out.println(h16);
		
		h16 = "3D";
		int e10 = Integer.parseInt(h16,16);
		System.out.println(e10);
	}
}
